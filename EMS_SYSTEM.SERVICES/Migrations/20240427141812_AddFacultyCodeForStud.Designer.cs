// <auto-generated />
using System;
using EMS_SYSTEM.APPLICATION;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS_SYSTEM.APPLICATION.Migrations
{
    [DbContext(typeof(UnvcenteralDataBaseContext))]
    [Migration("20240427141812_AddFacultyCodeForStud")]
    partial class AddFacultyCodeForStud
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMS_SYSTEM.AcadYead", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("ACAD_YEAD");
                });

            modelBuilder.Entity("EMS_SYSTEM.Assess", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("ASSESS");
                });

            modelBuilder.Entity("EMS_SYSTEM.Bylaw", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("CodeStudyMethodId")
                        .HasColumnType("int")
                        .HasColumnName("CODE_STUDY_METHOD_ID");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.HasIndex("CodeStudyMethodId");

                    b.HasIndex("FacultyId");

                    b.ToTable("BYLAW");
                });

            modelBuilder.Entity("EMS_SYSTEM.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("FacultyAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FACULTY_ADDRESS");

                    b.Property<string>("FacultyCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FACULTY_CODE");

                    b.Property<string>("FacultyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FACULTY_NAME");

                    b.Property<int?>("FacultyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_TYPE_ID");

                    b.HasKey("Id");

                    b.HasIndex("FacultyTypeId");

                    b.ToTable("FACULTY");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyHieryical", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("BylawId")
                        .HasColumnType("int")
                        .HasColumnName("BYLAW_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("ORDER");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("PARENT_ID");

                    b.Property<int?>("PhaseId")
                        .HasColumnType("int")
                        .HasColumnName("PHASE_ID");

                    b.Property<int?>("SemeterId")
                        .HasColumnType("int")
                        .HasColumnName("SEMETER_ID");

                    b.HasKey("Id");

                    b.HasIndex("BylawId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PhaseId");

                    b.HasIndex("SemeterId");

                    b.ToTable("FACULTY_HIERYICAL");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyNode", b =>
                {
                    b.Property<int>("FacultyNodeId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_NODE_ID");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_ID");

                    b.Property<int?>("Level")
                        .HasColumnType("int")
                        .HasColumnName("LEVEL");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("ORDER");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("PARENT_ID");

                    b.HasKey("FacultyNodeId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("ParentId");

                    b.ToTable("FACULTY__NODES");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyPhase", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("ORDER");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("FACULTY_PHASES");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultySemester", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CODE");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<int?>("Order")
                        .HasColumnType("int")
                        .HasColumnName("ORDER");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("FACULTY_SEMESTER");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("FACULTY_TYPE");
                });

            modelBuilder.Entity("EMS_SYSTEM.Palce", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ADDRESS");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("CAPACITY");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("PALCES");
                });

            modelBuilder.Entity("EMS_SYSTEM.Staff", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_ID");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasIndex("FacultyId");

                    b.ToTable("STAFF");
                });

            modelBuilder.Entity("EMS_SYSTEM.Student", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ADDRESS");

                    b.Property<int?>("Cityid")
                        .HasColumnType("int")
                        .HasColumnName("CITYID");

                    b.Property<DateOnly?>("Dateofbrith")
                        .HasColumnType("date")
                        .HasColumnName("DATEOFBRITH");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FacultyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FACULTYCODE");

                    b.Property<int?>("Facultyid")
                        .HasColumnType("int")
                        .HasColumnName("FACULTYID");

                    b.Property<int?>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("GENDER");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MOBILE");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("Nationalid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NATIONALID");

                    b.HasKey("Id");

                    b.HasIndex("Facultyid");

                    b.ToTable("STUDENTS");
                });

            modelBuilder.Entity("EMS_SYSTEM.StudentSemester", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("AcadYearId")
                        .HasColumnType("int")
                        .HasColumnName("ACAD_YEAR_ID");

                    b.Property<int?>("FacultyHieryicalId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_HIERYICAL_ID");

                    b.Property<int?>("FacultyNodeId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_NODE_ID");

                    b.Property<decimal?>("Gpa")
                        .HasColumnType("decimal(5, 3)")
                        .HasColumnName("GPA");

                    b.Property<int?>("IsPass")
                        .HasColumnType("int")
                        .HasColumnName("IS_PASS");

                    b.Property<decimal?>("Precentage")
                        .HasColumnType("decimal(5, 3)")
                        .HasColumnName("PRECENTAGE");

                    b.Property<int?>("StuentId")
                        .HasColumnType("int")
                        .HasColumnName("STUENT_ID");

                    b.Property<int?>("StuentSatutsId")
                        .HasColumnType("int")
                        .HasColumnName("STUENT_SATUTS_ID");

                    b.Property<decimal?>("Toal")
                        .HasColumnType("decimal(8, 3)")
                        .HasColumnName("TOAL");

                    b.HasKey("Id");

                    b.HasIndex("AcadYearId");

                    b.HasIndex("FacultyHieryicalId");

                    b.HasIndex("FacultyNodeId");

                    b.HasIndex("StuentId");

                    b.HasIndex("StuentSatutsId");

                    b.ToTable("STUDENT_SEMESTERS");
                });

            modelBuilder.Entity("EMS_SYSTEM.StudentSemesterSubject", b =>
                {
                    b.Property<int>("StudentSubjectSemterId")
                        .HasColumnType("int")
                        .HasColumnName("Student_Subject_Semter_Id");

                    b.Property<decimal?>("Degree")
                        .HasColumnType("decimal(8, 3)");

                    b.Property<int?>("IsPassed")
                        .HasColumnType("int")
                        .HasColumnName("Is_Passed");

                    b.Property<int?>("StudentSemestersId")
                        .HasColumnType("int")
                        .HasColumnName("STUDENT_SEMESTERS_Id");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("Subject_id");

                    b.HasKey("StudentSubjectSemterId");

                    b.HasIndex("StudentSemestersId");

                    b.HasIndex("SubjectId");

                    b.ToTable("STUDENT_SEMESTER_SUBJECT");
                });

            modelBuilder.Entity("EMS_SYSTEM.StudeyMethod", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("STUDEY_METHOD");
                });

            modelBuilder.Entity("EMS_SYSTEM.StuentSatut", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("StuentSatuts")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STUENT_SATUTS");

                    b.HasKey("Id");

                    b.ToTable("STUENT_SATUTS");
                });

            modelBuilder.Entity("EMS_SYSTEM.Subject", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("CreditHours")
                        .HasColumnType("int")
                        .HasColumnName("CREDIT_HOURS");

                    b.Property<int?>("FacultyHieryicalId")
                        .HasColumnType("int")
                        .HasColumnName("FACULTY_HIERYICAL_ID");

                    b.Property<int?>("MaxDegree")
                        .HasColumnType("int")
                        .HasColumnName("MAX_DEGREE");

                    b.Property<int?>("MinDegree")
                        .HasColumnType("int")
                        .HasColumnName("MIN_DEGREE");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("SUBJECTS");
                });

            modelBuilder.Entity("EMS_SYSTEM.SubjectAssess", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("AssessId")
                        .HasColumnType("int")
                        .HasColumnName("ASSESS_ID");

                    b.Property<int?>("MaxDegree")
                        .HasColumnType("int")
                        .HasColumnName("MAX_DEGREE");

                    b.Property<int?>("MinDegree")
                        .HasColumnType("int")
                        .HasColumnName("MIN_DEGREE");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SUBJECT_ID");

                    b.HasKey("Id");

                    b.HasIndex("AssessId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SUBJECT_ASSESS");
                });

            modelBuilder.Entity("EMS_SYSTEM.Bylaw", b =>
                {
                    b.HasOne("EMS_SYSTEM.StudeyMethod", "CodeStudyMethod")
                        .WithMany("Bylaws")
                        .HasForeignKey("CodeStudyMethodId")
                        .HasConstraintName("FK_BYLAW_STUDEY_METHOD");

                    b.HasOne("EMS_SYSTEM.Faculty", "Faculty")
                        .WithMany("Bylaws")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_BYLAW_FACULTY");

                    b.Navigation("CodeStudyMethod");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EMS_SYSTEM.Faculty", b =>
                {
                    b.HasOne("EMS_SYSTEM.FacultyType", "FacultyType")
                        .WithMany("Faculties")
                        .HasForeignKey("FacultyTypeId")
                        .HasConstraintName("FK_FACULTY_FACULTY_TYPE");

                    b.Navigation("FacultyType");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyHieryical", b =>
                {
                    b.HasOne("EMS_SYSTEM.Bylaw", "Bylaw")
                        .WithMany("FacultyHieryicals")
                        .HasForeignKey("BylawId")
                        .HasConstraintName("FK_FACULTY_HIERYICAL_BYLAW");

                    b.HasOne("EMS_SYSTEM.FacultyHieryical", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_FACULTY_HIERYICAL_FACULTY_HIERYICAL");

                    b.HasOne("EMS_SYSTEM.FacultyPhase", "Phase")
                        .WithMany("FacultyHieryicals")
                        .HasForeignKey("PhaseId")
                        .HasConstraintName("FK_FACULTY_HIERYICAL_FACULTY_PHASES");

                    b.HasOne("EMS_SYSTEM.FacultySemester", "Semeter")
                        .WithMany("FacultyHieryicals")
                        .HasForeignKey("SemeterId")
                        .HasConstraintName("FK_FACULTY_HIERYICAL_FACULTY_SEMESTER");

                    b.Navigation("Bylaw");

                    b.Navigation("Parent");

                    b.Navigation("Phase");

                    b.Navigation("Semeter");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyNode", b =>
                {
                    b.HasOne("EMS_SYSTEM.Faculty", "Faculty")
                        .WithMany("FacultyNodes")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_FACULTY__NODES_FACULTY");

                    b.HasOne("EMS_SYSTEM.FacultyNode", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_FACULTY__NODES_FACULTY__NODES");

                    b.Navigation("Faculty");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyPhase", b =>
                {
                    b.HasOne("EMS_SYSTEM.Faculty", "Faculty")
                        .WithMany("FacultyPhases")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_FACULTY_PHASES_FACULTY");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultySemester", b =>
                {
                    b.HasOne("EMS_SYSTEM.Faculty", "Faculty")
                        .WithMany("FacultySemesters")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_FACULTY_SEMESTER_FACULTY");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EMS_SYSTEM.Staff", b =>
                {
                    b.HasOne("EMS_SYSTEM.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("FK_STAFF_FACULTY");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EMS_SYSTEM.Student", b =>
                {
                    b.HasOne("EMS_SYSTEM.Faculty", "Faculty")
                        .WithMany("Students")
                        .HasForeignKey("Facultyid")
                        .HasConstraintName("FK_STUDENTS_FACULTY");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EMS_SYSTEM.StudentSemester", b =>
                {
                    b.HasOne("EMS_SYSTEM.AcadYead", "AcadYear")
                        .WithMany("StudentSemesters")
                        .HasForeignKey("AcadYearId")
                        .HasConstraintName("FK_STUDENT_SEMESTERS_ACAD_YEAD");

                    b.HasOne("EMS_SYSTEM.FacultyHieryical", "FacultyHieryical")
                        .WithMany("StudentSemesters")
                        .HasForeignKey("FacultyHieryicalId")
                        .HasConstraintName("FK_STUDENT_SEMESTERS_STUDENT_SEMESTERS");

                    b.HasOne("EMS_SYSTEM.FacultyNode", "FacultyNode")
                        .WithMany("StudentSemesters")
                        .HasForeignKey("FacultyNodeId")
                        .HasConstraintName("FK_STUDENT_SEMESTERS_FACULTY__NODES");

                    b.HasOne("EMS_SYSTEM.Student", "Stuent")
                        .WithMany("StudentSemesters")
                        .HasForeignKey("StuentId")
                        .HasConstraintName("FK_STUDENT_SEMESTERS_STUDENTS");

                    b.HasOne("EMS_SYSTEM.StuentSatut", "StuentSatuts")
                        .WithMany("StudentSemesters")
                        .HasForeignKey("StuentSatutsId")
                        .HasConstraintName("FK_STUDENT_SEMESTERS_STUENT_SATUTS");

                    b.Navigation("AcadYear");

                    b.Navigation("FacultyHieryical");

                    b.Navigation("FacultyNode");

                    b.Navigation("Stuent");

                    b.Navigation("StuentSatuts");
                });

            modelBuilder.Entity("EMS_SYSTEM.StudentSemesterSubject", b =>
                {
                    b.HasOne("EMS_SYSTEM.StudentSemester", "StudentSemesters")
                        .WithMany("StudentSemesterSubjects")
                        .HasForeignKey("StudentSemestersId")
                        .HasConstraintName("FK_STUDENT_SEMESTER_SUBJECT_STUDENT_SEMESTERS");

                    b.HasOne("EMS_SYSTEM.Subject", "Subject")
                        .WithMany("StudentSemesterSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_STUDENT_SEMESTER_SUBJECT_SUBJECTS");

                    b.Navigation("StudentSemesters");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EMS_SYSTEM.Subject", b =>
                {
                    b.HasOne("EMS_SYSTEM.FacultySemester", "IdNavigation")
                        .WithOne("Subject")
                        .HasForeignKey("EMS_SYSTEM.Subject", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_SUBJECTS_FACULTY_SEMESTER");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("EMS_SYSTEM.SubjectAssess", b =>
                {
                    b.HasOne("EMS_SYSTEM.Assess", "Assess")
                        .WithMany("SubjectAssesses")
                        .HasForeignKey("AssessId")
                        .HasConstraintName("FK_SUBJECT_ASSESS_ASSESS");

                    b.HasOne("EMS_SYSTEM.Subject", "Subject")
                        .WithMany("SubjectAssesses")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_SUBJECT_ASSESS_SUBJECTS");

                    b.Navigation("Assess");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EMS_SYSTEM.AcadYead", b =>
                {
                    b.Navigation("StudentSemesters");
                });

            modelBuilder.Entity("EMS_SYSTEM.Assess", b =>
                {
                    b.Navigation("SubjectAssesses");
                });

            modelBuilder.Entity("EMS_SYSTEM.Bylaw", b =>
                {
                    b.Navigation("FacultyHieryicals");
                });

            modelBuilder.Entity("EMS_SYSTEM.Faculty", b =>
                {
                    b.Navigation("Bylaws");

                    b.Navigation("FacultyNodes");

                    b.Navigation("FacultyPhases");

                    b.Navigation("FacultySemesters");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyHieryical", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("StudentSemesters");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyNode", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("StudentSemesters");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyPhase", b =>
                {
                    b.Navigation("FacultyHieryicals");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultySemester", b =>
                {
                    b.Navigation("FacultyHieryicals");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EMS_SYSTEM.FacultyType", b =>
                {
                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("EMS_SYSTEM.Student", b =>
                {
                    b.Navigation("StudentSemesters");
                });

            modelBuilder.Entity("EMS_SYSTEM.StudentSemester", b =>
                {
                    b.Navigation("StudentSemesterSubjects");
                });

            modelBuilder.Entity("EMS_SYSTEM.StudeyMethod", b =>
                {
                    b.Navigation("Bylaws");
                });

            modelBuilder.Entity("EMS_SYSTEM.StuentSatut", b =>
                {
                    b.Navigation("StudentSemesters");
                });

            modelBuilder.Entity("EMS_SYSTEM.Subject", b =>
                {
                    b.Navigation("StudentSemesterSubjects");

                    b.Navigation("SubjectAssesses");
                });
#pragma warning restore 612, 618
        }
    }
}
